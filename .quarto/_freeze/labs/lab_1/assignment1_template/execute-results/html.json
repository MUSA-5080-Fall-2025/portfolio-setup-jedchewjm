{
  "hash": "4a5c11641ab96df03b58a6a7ddff8f86",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 1: Census Data Quality for Policy Decisions\"\nsubtitle: \"Evaluating Data Reliability for Algorithmic Decision-Making\"\nauthor: \"Jed Chew\"\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\nexecute:\n  warning: false\n  message: false\n---\n\n# Assignment Overview\n\n## Scenario\n\nYou are a data analyst for the **New York Department of Human Services**. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\n\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.\n\n## Learning Objectives\n\n-   Apply dplyr functions to real census data for policy analysis\n-   Evaluate data quality using margins of error\n-   Connect technical analysis to algorithmic decision-making\n-   Identify potential equity implications of data reliability issues\n-   Create professional documentation for policy stakeholders\n\n## Submission Instructions\n\n**Submit by posting your updated portfolio link on Canvas.** Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/`\n\nMake sure to update your `_quarto.yml` navigation to include this assignment under an \"Assignments\" menu.\n\n# Part 1: Portfolio Integration\n\nCreate this assignment in your portfolio repository under an `assignments/assignment_1/` folder structure. Update your navigation menu to include:\n\n```         \n- text: Assignments\n  menu:\n    - href: assignments/assignment_1/your_file_name.qmd\n      text: \"Assignment 1: Census Data Exploration\"\n```\n\nIf there is a special character like comma, you need use double quote mark so that the quarto can identify this as text\n\n# Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages (hint: you need tidycensus, tidyverse, and knitr)\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(knitr)\n\n# Set your Census API key\ncensus_api_key(\"fe841b7ef0aa73d9579f0517bd1c8f26d33c789b\")\n\n# Choose your state for analysis - assign it to a variable called my_state\n```\n:::\n\n\n**State Selection:** I have chosen **New York State** for this analysis because I will be working in New York City post-graduation.\n\n# Part 2: County-Level Resource Assessment\n\n## 2.1 Data Retrieval\n\n**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.\n\n**Requirements:**\\\n- Geography: county level\\\n- Variables: median household income (B19013_001) and total population (B01003_001)\\\n- Year: 2022\\\n- Survey: acs5\\\n- Output format: wide\n\n**Hint:** Remember to give your variables descriptive names using the `variables = c(name = \"code\")` syntax.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write your get_acs() code here\nny_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    total_pop = \"B01003_001\",\n    median_income = \"B19013_001\"\n  ),\n  state = \"NY\",\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\" \n)\n\n# Clean the county names to remove state name and \"County\" \n# Hint: use mutate() with str_remove()\n\nny_clean <- ny_data |> \n  mutate(\n    # Remove state name from county names\n    county_name = str_remove(NAME, \", New York\"),\n    # Remove \"County\" word\n    county_name = str_remove(county_name, \" County\")\n  )\n\n# Display the first few rows\nhead(ny_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  GEOID NAME     total_popE total_popM median_incomeE median_incomeM county_name\n  <chr> <chr>         <dbl>      <dbl>          <dbl>          <dbl> <chr>      \n1 36001 Albany …     315041         NA          78829           2049 Albany     \n2 36003 Allegan…      47222         NA          58725           1965 Allegany   \n3 36005 Bronx C…    1443229         NA          47036            890 Bronx      \n4 36007 Broome …     198365         NA          58317           1761 Broome     \n5 36009 Cattara…      77000         NA          56889           1778 Cattaraugus\n6 36011 Cayuga …      76171         NA          63227           2736 Cayuga     \n```\n\n\n:::\n:::\n\n\n## 2.2 Data Quality Assessment\n\n**Your Task:** Calculate margin of error percentages and create reliability categories.\n\n**Requirements:**\n\n\\- Calculate MOE percentage: (margin of error / estimate) \\* 100\\\n- Create reliability categories:\\\n- High Confidence: MOE \\< 5%\\\n- Moderate Confidence: MOE 5-10%\\\n- Low Confidence: MOE \\> 10%\\\n- Create a flag for unreliable estimates (MOE \\> 10%)\n\n**Hint:** Use `mutate()` with `case_when()` for the categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate MOE percentage and reliability categories using mutate()\nny_reliability <- ny_clean |> \n  mutate(\n    moe_percent = round((median_incomeM / median_incomeE) * 100, 2),\n    \n    # Create reliability categories\n    reliability = case_when(\n      moe_percent < 5 ~ \"High\",\n      moe_percent >= 5 & moe_percent <= 10 ~ \"Moderate\",\n      moe_percent > 10 ~ \"Low\"\n    )\n  )\n\nny_reliability\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 62 × 9\n   GEOID NAME    total_popE total_popM median_incomeE median_incomeM county_name\n   <chr> <chr>        <dbl>      <dbl>          <dbl>          <dbl> <chr>      \n 1 36001 Albany…     315041         NA          78829           2049 Albany     \n 2 36003 Allega…      47222         NA          58725           1965 Allegany   \n 3 36005 Bronx …    1443229         NA          47036            890 Bronx      \n 4 36007 Broome…     198365         NA          58317           1761 Broome     \n 5 36009 Cattar…      77000         NA          56889           1778 Cattaraugus\n 6 36011 Cayuga…      76171         NA          63227           2736 Cayuga     \n 7 36013 Chauta…     127440         NA          54625           1754 Chautauqua \n 8 36015 Chemun…      83584         NA          61358           2475 Chemung    \n 9 36017 Chenan…      47096         NA          61741           2526 Chenango   \n10 36019 Clinto…      79839         NA          67097           2802 Clinton    \n# ℹ 52 more rows\n# ℹ 2 more variables: moe_percent <dbl>, reliability <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create a summary showing count of counties in each reliability category\n# Hint: use count() and mutate() to add percentages\ncount(ny_reliability, reliability)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  reliability     n\n  <chr>       <int>\n1 High           56\n2 Low             1\n3 Moderate        5\n```\n\n\n:::\n:::\n\n\n## 2.3 High Uncertainty Counties\n\n**Your Task:** Identify the 5 counties with the highest MOE percentages.\n\n**Requirements:** - Sort by MOE percentage (highest first) - Select the top 5 counties - Display: county name, median income, margin of error, MOE percentage, reliability category - Format as a professional table using `kable()`\n\n**Hint:** Use `arrange()`, `slice()`, and `select()` functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create table of top 5 counties by MOE percentage\nhigh_uncertainty <- ny_reliability |> \n  arrange(desc(moe_percent)) |> \n  slice(1:5) |> \n  select(county_name, median_incomeE, median_incomeM, moe_percent, reliability)\n\nhigh_uncertainty\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  county_name median_incomeE median_incomeM moe_percent reliability\n  <chr>                <dbl>          <dbl>       <dbl> <chr>      \n1 Hamilton             66891           7622       11.4  Low        \n2 Schuyler             61316           5818        9.49 Moderate   \n3 Greene               70294           4341        6.18 Moderate   \n4 Yates                63974           3733        5.84 Moderate   \n5 Essex                68090           3590        5.27 Moderate   \n```\n\n\n:::\n\n```{.r .cell-code}\n# Format as table with kable() - include appropriate column names and caption\nkable(high_uncertainty,\n      col.names = c(\"County\", \"Median Income\", \"MOE\", \"MOE %\", \"Reliability\"),\n      caption = \"NY Counties with Greatest Income Data Uncertainty\",\n      format.args = list(big.mark = \",\")) #large nums have 000s separators\n```\n\n::: {.cell-output-display}\n\n\nTable: NY Counties with Greatest Income Data Uncertainty\n\n|County   | Median Income|   MOE| MOE %|Reliability |\n|:--------|-------------:|-----:|-----:|:-----------|\n|Hamilton |        66,891| 7,622| 11.39|Low         |\n|Schuyler |        61,316| 5,818|  9.49|Moderate    |\n|Greene   |        70,294| 4,341|  6.18|Moderate    |\n|Yates    |        63,974| 3,733|  5.84|Moderate    |\n|Essex    |        68,090| 3,590|  5.27|Moderate    |\n\n\n:::\n:::\n\n\n**Data Quality Commentary:** Algorithmic decision-making at the New York state-level cannot occur with one broad brush. While 56 out of 62 NY counties are classified as having highly reliable income data, 5 counties are classified as having moderate reliability and 1 county is classified as having low reliability. As shown in the table below, a possible reason for these 6 counties having low/moderate reliability could be their relatively smaller populations compared to other counties. Hence, special attention must be paid to these 6 counties, with algorithmic tools to identify communities that should receive priority for social service funding and outreach programs being complemented by qualitative on-the-ground outreach and interviews with local residents.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhigh_uncertainty_pop <- ny_reliability |> \n  arrange(desc(moe_percent)) |> \n  slice(1:5) |> \n  select(county_name, total_popE, median_incomeE, moe_percent, reliability)\n\nhigh_uncertainty_pop\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  county_name total_popE median_incomeE moe_percent reliability\n  <chr>            <dbl>          <dbl>       <dbl> <chr>      \n1 Hamilton          5090          66891       11.4  Low        \n2 Schuyler         17855          61316        9.49 Moderate   \n3 Greene           48067          70294        6.18 Moderate   \n4 Yates            24713          63974        5.84 Moderate   \n5 Essex            37314          68090        5.27 Moderate   \n```\n\n\n:::\n:::\n\n\n# Part 3: Neighborhood-Level Analysis\n\n## 3.1 Focus Area Selection\n\n**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.\n\n**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use filter() to select 2-3 counties from your county_reliability data\n# Store the selected counties in a variable called selected_counties\n\nselected_counties <- ny_reliability |> \n  slice_min(moe_percent, n = 1, by = reliability)\nselected_counties\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 9\n  GEOID NAME     total_popE total_popM median_incomeE median_incomeM county_name\n  <chr> <chr>         <dbl>      <dbl>          <dbl>          <dbl> <chr>      \n1 36081 Queens …    2360826         NA          82431            873 Queens     \n2 36099 Seneca …      33651         NA          64050           3355 Seneca     \n3 36041 Hamilto…       5090         NA          66891           7622 Hamilton   \n# ℹ 2 more variables: moe_percent <dbl>, reliability <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Display the selected counties with their key characteristics\n# Show: county name, median income, MOE percentage, reliability category\nselect(selected_counties, county_name, median_incomeE, moe_percent, reliability)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  county_name median_incomeE moe_percent reliability\n  <chr>                <dbl>       <dbl> <chr>      \n1 Queens               82431        1.06 High       \n2 Seneca               64050        5.24 Moderate   \n3 Hamilton             66891       11.4  Low        \n```\n\n\n:::\n:::\n\n\n**Comment on the output:** There is a significant difference between the margin of error for different counties. For example, Queens County has a margin of error percentage of only 1.06%, whereas Hamilton County has a margin of error percentage of 11.39%.\n\n## 3.2 Tract-Level Demographics\n\n**Your Task:** Get demographic data for census tracts in your selected counties.\n\n**Requirements:**\n\n-   Geography: tract level\n-   Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)\n-   Use the same state and year as before\n-   Output format: wide\n\n**Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define your race/ethnicity variables with descriptive names\nrace_vars <- c(\n    total_pop = \"B03002_001\",\n    White     = \"B03002_003\",\n    Black     = \"B03002_004\",\n    Hispanic  = \"B03002_012\"\n)\n\n# Use get_acs() to retrieve tract-level data\n# Hint: You may need to specify county codes in the county parameter\ntract_data <- get_acs(\n  geography = \"tract\",\n  variables = race_vars,\n  state = \"NY\",\n  # GEOIDs for Queens, Seneca, and Hamilton Counties\n  county = c(\"081\", \"099\", \"041\"),\n  year = 2022,\n  output = \"wide\"\n)\ntract_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 740 × 10\n   GEOID       NAME  total_popE total_popM WhiteE WhiteM BlackE BlackM HispanicE\n   <chr>       <chr>      <dbl>      <dbl>  <dbl>  <dbl>  <dbl>  <dbl>     <dbl>\n 1 36041950100 Cens…        922        156    817    145     23     18        43\n 2 36041950300 Cens…       1063        229   1008    224      2      4         3\n 3 36041950400 Cens…       1880        240   1740    225      6      8        48\n 4 36041950500 Cens…       1225        144   1121    136     24     13         8\n 5 36081000101 Cens…       5027        860   2086    492      0     19       592\n 6 36081000102 Cens…       5966       1015   3144    760     39     47       459\n 7 36081000103 Cens…          0         13      0     13      0     13         0\n 8 36081000104 Cens…        371        110     65     67    169     58       125\n 9 36081000200 Cens…       2553        551    273    104    203    172      1202\n10 36081000400 Cens…       4738       1144    131     93    216    195      3327\n# ℹ 730 more rows\n# ℹ 1 more variable: HispanicM <dbl>\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add readable tract and county name columns using str_extract() or similar\ntract_clean <- tract_data |> \n  filter(total_popE > 0) |> # remove tracts with zero estimated population\n  separate(\n    NAME, \n    into = c(\"tract_name\", \"county_name\", \"state_name\"), \n    sep = \"; \"\n  ) |> \n  mutate(\n    tract_name = str_remove(tract_name, \"Census Tract \"),\n    county_name = str_remove(county_name, \" County\")\n  )\n\ntract_clean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 704 × 12\n   GEOID   tract_name county_name state_name total_popE total_popM WhiteE WhiteM\n   <chr>   <chr>      <chr>       <chr>           <dbl>      <dbl>  <dbl>  <dbl>\n 1 360419… 9501       Hamilton    New York          922        156    817    145\n 2 360419… 9503       Hamilton    New York         1063        229   1008    224\n 3 360419… 9504       Hamilton    New York         1880        240   1740    225\n 4 360419… 9505       Hamilton    New York         1225        144   1121    136\n 5 360810… 1.01       Queens      New York         5027        860   2086    492\n 6 360810… 1.02       Queens      New York         5966       1015   3144    760\n 7 360810… 1.04       Queens      New York          371        110     65     67\n 8 360810… 2          Queens      New York         2553        551    273    104\n 9 360810… 4          Queens      New York         4738       1144    131     93\n10 360810… 6          Queens      New York         3890        777    346    179\n# ℹ 694 more rows\n# ℹ 4 more variables: BlackE <dbl>, BlackM <dbl>, HispanicE <dbl>,\n#   HispanicM <dbl>\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate percentage of each group using mutate()\n# Create percentages for white, Black, and Hispanic populations\ntract_clean <- tract_clean |> \n  mutate(\n    percent_white = round((WhiteE/total_popE) * 100, 2),\n    percent_black = round((BlackE/total_popE) * 100, 2),\n    percent_hispanic = round((HispanicE/total_popE) * 100, 2),\n    moe_percent_white = round((WhiteM/WhiteE) * 100, 2), \n    moe_percent_black = round((BlackM/BlackE) * 100, 2),\n    moe_percent_hispanic = round((HispanicM/HispanicE) * 100, 2)\n  )\n\ntract_clean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 704 × 18\n   GEOID   tract_name county_name state_name total_popE total_popM WhiteE WhiteM\n   <chr>   <chr>      <chr>       <chr>           <dbl>      <dbl>  <dbl>  <dbl>\n 1 360419… 9501       Hamilton    New York          922        156    817    145\n 2 360419… 9503       Hamilton    New York         1063        229   1008    224\n 3 360419… 9504       Hamilton    New York         1880        240   1740    225\n 4 360419… 9505       Hamilton    New York         1225        144   1121    136\n 5 360810… 1.01       Queens      New York         5027        860   2086    492\n 6 360810… 1.02       Queens      New York         5966       1015   3144    760\n 7 360810… 1.04       Queens      New York          371        110     65     67\n 8 360810… 2          Queens      New York         2553        551    273    104\n 9 360810… 4          Queens      New York         4738       1144    131     93\n10 360810… 6          Queens      New York         3890        777    346    179\n# ℹ 694 more rows\n# ℹ 10 more variables: BlackE <dbl>, BlackM <dbl>, HispanicE <dbl>,\n#   HispanicM <dbl>, percent_white <dbl>, percent_black <dbl>,\n#   percent_hispanic <dbl>, moe_percent_white <dbl>, moe_percent_black <dbl>,\n#   moe_percent_hispanic <dbl>\n```\n\n\n:::\n:::\n\n\n## 3.3 Demographic Analysis\n\n**Your Task:** Analyze the demographic patterns in your selected areas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find the tract with the highest percentage of Hispanic/Latino residents\n# Hint: use arrange() and slice() to get the top tract\ntract_highest_hispanic <- tract_clean |> \n  arrange(desc(percent_hispanic)) |> \n  slice(1) |> \n  select(tract_name, county_name, total_popE, percent_hispanic)\n\ntract_highest_hispanic\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  tract_name county_name total_popE percent_hispanic\n  <chr>      <chr>            <dbl>            <dbl>\n1 407.01     Queens            3676             96.6\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate average demographics by county using group_by() and summarize()\n# Show: number of tracts, average percentage for each racial/ethnic group\n\ndemo_county <- tract_clean |> \n  group_by(county_name) |> \n  summarize(\n    num_tracts = n(),\n    mean_white = round(mean(percent_white), 2),\n    mean_black = round(mean(percent_black), 2),\n    mean_hispanic = round(mean(percent_hispanic), 2)\n  )\n\n# Create a nicely formatted table of your results using kable()\nkable(demo_county,\n      col.names = c(\"County Name\", \"# Tracts\", \"% White\", \"% Black\", \"% Hispanic\"),\n      caption = \"Average Demographics by County for Selected NY Counties\",\n      format.args = list(big.mark = \",\")) #large nums have 000s separators\n```\n\n::: {.cell-output-display}\n\n\nTable: Average Demographics by County for Selected NY Counties\n\n|County Name | # Tracts| % White| % Black| % Hispanic|\n|:-----------|--------:|-------:|-------:|----------:|\n|Hamilton    |        4|   91.88|    1.24|       2.04|\n|Queens      |      689|   23.91|   18.42|      27.07|\n|Seneca      |       11|   84.45|    7.23|       4.32|\n\n\n:::\n:::\n\n\n# Part 4: Comprehensive Data Quality Evaluation\n\n## 4.1 MOE Analysis for Demographic Variables\n\n**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.\n\n**Requirements:**\n\n-   Calculate MOE percentages for each demographic variable\n-   Flag tracts where any demographic variable has MOE \\> 15%\n-   Create Summary Statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate MOE percentages for white, Black, and Hispanic variables\n# Hint: use the same formula as before (margin/estimate * 100)\n\n# Create a flag for tracts with high MOE on any demographic variable\n# Use logical operators (| for OR) in an ifelse() statement\n\n# Create summary statistics showing how many tracts have data quality issues\n```\n:::\n\n\n## 4.2 Pattern Analysis\n\n**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group tracts by whether they have high MOE issues\n# Calculate average characteristics for each group:\n# - population size, demographic percentages\n\n# Use group_by() and summarize() to create this comparison\n# Create a professional table showing the patterns\n```\n:::\n\n\n**Pattern Analysis:** \\[Describe any patterns you observe. Do certain types of communities have less reliable data? What might explain this?\\]\n\n# Part 5: Policy Recommendations\n\n## 5.1 Analysis Integration and Professional Summary\n\n**Your Task:** Write an executive summary that integrates findings from all four analyses.\n\n**Executive Summary Requirements:**\n\n1\\. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?\n\n2\\. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?\n\n3\\. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?\n\n4\\. **Strategic Recommendations**: What should the Department implement to address these systematic issues?\n\n**Executive Summary:**\n\n\\[Your integrated 4-paragraph summary here\\]\n\n## 6.3 Specific Recommendations\n\n**Your Task:** Create a decision framework for algorithm implementation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a summary table using your county reliability data\n# Include: county name, median income, MOE percentage, reliability category\n\n# Add a new column with algorithm recommendations using case_when():\n# - High Confidence: \"Safe for algorithmic decisions\"\n# - Moderate Confidence: \"Use with caution - monitor outcomes\"  \n# - Low Confidence: \"Requires manual review or additional data\"\n\n# Format as a professional table with kable()\n```\n:::\n\n\n**Key Recommendations:**\n\n**Your Task:** Use your analysis results to provide specific guidance to the department.\n\n1.  **Counties suitable for immediate algorithmic implementation:** \\[List counties with high confidence data and explain why they're appropriate\\]\n\n2.  **Counties requiring additional oversight:** \\[List counties with moderate confidence data and describe what kind of monitoring would be needed\\]\n\n3.  **Counties needing alternative approaches:** \\[List counties with low confidence data and suggest specific alternatives - manual review, additional surveys, etc.\\]\n\n## Questions for Further Investigation\n\n\\[List 2-3 questions that your analysis raised that you'd like to explore further in future assignments. Consider questions about spatial patterns, time trends, or other demographic factors.\\]\n\n# Technical Notes\n\n**Data Sources:** - U.S. Census Bureau, American Community Survey 2018-2022 5-Year Estimates - Retrieved via tidycensus R package on September 17, 2025\n\n**Reproducibility:** - All analysis conducted in R version 4.5.1 - Census API key required for replication - Complete code and documentation available at: <https://musa-5080-fall-2025.github.io/portfolio-setup-jedchewjm/>\n\n**Methodology Notes:** \\[Describe any decisions you made about data processing, county selection, or analytical choices that might affect reproducibility\\]\n\n**Limitations:** \\[Note any limitations in your analysis - sample size issues, geographic scope, temporal factors, etc.\\]\n\n------------------------------------------------------------------------\n\n## Submission Checklist\n\nBefore submitting your portfolio link on Canvas:\n\n-   [x] All code chunks run without errors\n-   [ ] All \"\\[Fill this in\\]\" prompts have been completed\n-   [ ] Tables are properly formatted and readable\n-   [ ] Executive summary addresses all four required components\n-   [x] Portfolio navigation includes this assignment\n-   [x] Census API key is properly set\n-   [x] Document renders correctly to HTML\n\n**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}