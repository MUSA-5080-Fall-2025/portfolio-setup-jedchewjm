{
  "hash": "82fe9297958b9fdeff41f72956dfd05f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 5 Notes - Intro to Linear Regression\"\ndate: \"2025-10-06\"\n---\n\n## Key Concepts Learned\n\n1.  **The Statistical Learning Framework:** What are we actually doing?\n2.  **Two goals:** Understanding relationships vs Making predictions\n3.  **Building your first model** with PA census data\n4.  **Model evaluation:** How do we know if it's any good?\n5.  **Checking assumptions:** When can we trust the model?\n6.  **Improving predictions:** Transformations, multiple variables\n\n### **Statistical Significance**\n\n**t-statistic:** How many standard errors away from 0?\n\n-   Bigger \\|t\\| = more confidence the relationship is real\n\n**p-value:** Probability of seeing our estimate if H₀ is true\n\n-   Small p → reject H₀, conclude relationship exists\n\n### Model Evaluation\n\n-   **How well does it fit the data we used?** (in-sample fit using R²)\n\n-   **How well would it predict new data?** (out-of-sample performance)\n\n## Coding Techniques\n\n-   **Linear Regression Train/Test Split**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nn <- nrow(pa_data)\n\n# 70% training, 30% testing\ntrain_indices <- sample(1:n, size = 0.7 * n)\ntrain_data <- pa_data[train_indices, ]\ntest_data <- pa_data[-train_indices, ]\n\n# Fit on training data only\nmodel_train <- lm(median_incomeE ~ total_popE, data = train_data)\n\n# Predict on test data\ntest_predictions <- predict(model_train, newdata = test_data)\n```\n:::\n\n\n-   **Evaluate Predictions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrmse_test <- sqrt(mean((test_data$median_incomeE - test_predictions)^2))\nrmse_train <- summary(model_train)$sigma\n\ncat(\"Training RMSE:\", round(rmse_train, 0), \"\\n\")\ncat(\"Test RMSE:\", round(rmse_test, 0), \"\\n\")\n```\n:::\n\n\n-   **10-Fold Cross Validation**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n{r}\nlibrary(caret)\n\ntrain_control <- trainControl(method = \"cv\", number = 10)\n\ncv_model <- train(median_incomeE ~ total_popE,\n                  data = pa_data,\n                  method = \"lm\",\n                  trControl = train_control)\n\ncv_model$results\n```\n:::\n\n\n## Questions & Challenges\n\n-   \n\n## Connections to Policy\n\n-   \n\n## Reflection\n\n-   \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}