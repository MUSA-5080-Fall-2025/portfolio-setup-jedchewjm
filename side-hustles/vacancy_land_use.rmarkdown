---
title: "Vacancy and Land Use - Sharswood"
subtitle: "URBS 4000: Urban Studies Thesis"
author: "Jed Chew"
date: today
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
    embed-resources: true
execute:
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 80
---

## Project Title: Mixed by Design

### *A Case Study of the Philadelphia Housing Authority's (PHA) Choice Neighborhoods Redevelopment of Sharswood*

For my Urban Studies thesis, I am researching the PHA's Choice Neighborhoods
redevelopment of the Sharswood neighborhood in North Philadelphia. I have two
main research questions about the process and outcome of this redevelopment:

\(1\) the **process** by which the PHA aligned the politics, finance, and design
for the redevelopment of Sharswood; andÂ 

\(2\) the early redevelopment **outcomes** relative to the Choice Neighborhoods
Initiative (CNI) vision of mixed-partners, mixed-use, and mixed-income

## Part 1: Vacancy Data

**Vacant Property Indicators from Open Data Philly**

-   Data Source:
    <https://opendataphilly.org/datasets/vacant-property-indicators/>

-   Date Downloaded: Oct 20, 2025

-   Description: The location of properties across Philadelphia that are likely
    to be a vacant lot or vacant building based on an assessment of City of
    Philadelphia administrative datasets.

-   Types of GeoJSON Files: Buildings, Land, and Points

### Step 1: Load Raw Data as csv files

-   Philadelphia census tracts, block groups, and neighborhood boundaries

```{r, echo = FALSE, include = FALSE}
# Load required packages
library(tidyverse)
library(tidycensus)
library(janitor)
library(sf)
library(tigris)
library(scales)
library(patchwork)
library(RColorBrewer)
library(units)
library(knitr)
library(caret)

# Set Census API key
census_api_key("fe841b7ef0aa73d9579f0517bd1c8f26d33c789b")

# Get working directory
getwd()
```

```{r, results = 'hide'}
# Load spatial data
census_tracts <- tracts(state = "PA", county = "Philadelphia", year = 2020, class = "sf", cb = TRUE, progress = FALSE)
block_grps <- block_groups(state = "PA", county = "Philadelphia", year = 2020, class = "sf",cb = TRUE, progress = FALSE)

# Filter Block Groups for Sharswood
ids <- c("421010138001","421010138002","421010139001",
         "421010139002","421010139003")

sharswood_bg_sf <- block_grps |>
 filter(GEOID %in% ids) |> 
  st_transform(2272) # PA State Plane (in US Survey Feet)
```

--------------------------------------------------------------------------------

### Step 2: Get Philadelphia Demographic Data using `tidycensus`

```{r, eval = FALSE}
# Load all available variables for ACS 5-year 2022
acs_vars_2022 <- load_variables(2022, "acs5", cache = TRUE)
```

```{r, results = 'hide'}
# Helper Variables for Summing Population Values for Children aged 5-19
child_pop = c("B01001_004", "B01001_005", "B01001_006", "B01001_007", 
                "B01001_028", "B01001_029", "B01001_030", "B01001_031")


# Helper Variable for Summing Population Values for Elderly Population
elderly_pop = c("B01001_020", "B01001_021", "B01001_022", "B01001_023", 
                "B01001_024", "B01001_025", 
                "B01001_044", "B01001_045", "B01001_046", 
                "B01001_047", "B01001_048", "B01001_049")

# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_tract_2022_data <- get_acs(
  geography = "tract",
  variables = c(
    total_pop = "B01003_001",
    child_pop = child_pop,
    elderly_pop = elderly_pop,
    median_income = "B19013_001",
    poverty = "B17001_001",
    White     = "B03002_003",
    Black     = "B03002_004",
    Hispanic  = "B03002_012"
  ),
  state = "PA",
  county = "Philadelphia",
  year = 2022,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)

# Clean the county names to remove state name and "County" 
phl_tract_2022_clean <- phl_tract_2022_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = "; "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )

phl_tract_2022_summary <- phl_tract_2022_clean |>
  mutate(
    elderly_popE = rowSums(across(matches("^elderly_pop\\d+E$")), na.rm = TRUE),
    # for MOE, ACS guidance is to combine by quadrature
    elderly_popM = sqrt(rowSums(across(matches("^elderly_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_elderly = round((elderly_popE / total_popE) *100, 2),
    child_popE = rowSums(across(matches("^child_pop\\d+E$")), na.rm = TRUE),
    child_popM = sqrt(rowSums(across(matches("^child_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_child = round((child_popE/total_popE) * 100, 2),
  ) |>
  select(GEOID, tract_name, county_name, total_popE, median_incomeE, elderly_popE, 
         elderly_popM, pct_elderly, child_popE, child_popM, pct_child)
```

--------------------------------------------------------------------------------

### Step 3: Filter Data for Sharswood

```{r, results = 'hide'}
# Filter Census Tracts for Sharswood
sharswood_2022_tract_sf <- phl_tract_2022_summary |> 
  filter(tract_name %in% c("138", "139"))

ggplot(sharswood_2022_tract_sf) +
  geom_sf() +
  theme_void()

sharswood_2022_tract <- sharswood_2022_tract_sf |> 
  st_drop_geometry()
sharswood_2022_tract
```

--------------------------------------------------------------------------------

### Step 4: Plot Maps of Vacant Buildings, Land, and Points in Sharswood

```{r, results = 'hide'}
sharswood_land_parcels <- st_read("data/sharswood_parcels.geojson")

ggplot() +
  geom_sf(data = sharswood_bg_sf, fill = "gray97", color = "gray50", linewidth = 0.3) +
  geom_sf(data = sharswood_land_parcels, fill = NA, color = "gray50", linewidth = 0.6) +
  labs(title = "Property Parcels in Sharswood") +
  theme_void()
```

```{r, results = 'hide'}
vacant_bldgs <- st_read("data/Vacant_Indicators_Bldg.geojson")
vacant_land <- st_read("data/Vacant_Indicators_Land.geojson")
vacant_pts <- st_read("data/Vacant_Indicators_Points.geojson")

sharswood_zip <- 19121

sharswood_vacant_bldgs <- vacant_bldgs |> 
  st_transform(st_crs(sharswood_bg_sf)) |> 
  filter(zipcode == sharswood_zip) |> 
  st_filter(sharswood_bg_sf, .predicate = st_intersects)

sharswood_vacant_land <- vacant_land |> 
  st_transform(st_crs(sharswood_bg_sf)) |> 
  filter(ZIPCODE == sharswood_zip) |> 
  st_filter(sharswood_bg_sf, .predicate = st_intersects)

sharswood_vacant_pts <- vacant_pts |> 
  st_transform(st_crs(sharswood_bg_sf)) |> 
  filter(ZIPCODE == sharswood_zip) |> 
  st_filter(sharswood_bg_sf, .predicate = st_within)
```

```{r}
ggplot() +
  geom_sf(data = sharswood_land_parcels, fill = NA, color = "gray50", linewidth = 0.6) +
  geom_sf(data = sharswood_vacant_bldgs, aes(fill = bldg_desc)) +
  labs(
    title = "Vacant Buildings in Sharswood",
    subtitle = "Date Last Updated: July 7, 2025") +
  theme_void()
```

```{r}
ggplot() +
  geom_sf(data = sharswood_land_parcels, fill = NA, color = "gray50", linewidth = 0.6) +
  geom_sf(data = sharswood_vacant_land, aes(fill = ZONINGBASEDISTRICT)) +
  labs(
    title = "Vacant Land in Sharswood",
    subtitle = "Date Last Updated: March 24, 2025") +
  theme_void()
```

```{r}
ggplot() +
  geom_sf(data = sharswood_land_parcels, fill = NA, color = "gray50", linewidth = 0.6) +
  geom_sf(data = sharswood_vacant_pts, aes(color = VACANT_FLAG)) +
  labs(
    title = "Vacant Points in Sharswood",
    subtitle = "Date Last Updated: March 24, 2025") +
  theme_void()
```

--------------------------------------------------------------------------------

## Part 2: Land-Use Data

--------------------------------------------------------------------------------

-   Data Source: <https://opendataphilly.org/datasets/land-use/>

-   Date Downloaded: Oct 20, 2025

-   Description: City of Philadelphia land use as ascribed to individual parcel
    boundaries or units of land. Land use is the type of activity occurring on
    the land such as residential, commercial or industrial. Each unit of land is
    assigned one of nine major classifications of land use (2-digit code), and
    where possible a more narrowly defined sub-classification (3-digit code).
    The land use feature class has been field checked and corrected for the
    following Planning Districts.

```{r, eval = FALSE}
# curr_land_use <- st_read("data/Land_Use.geojson")

# sharswood_land_use <- curr_land_use |> 
  # st_transform(st_crs(sharswood_bg_sf)) |> 
  # st_filter(sharswood_bg_sf, .predicate = st_intersects)

# land_use_2012_2018 <- st_Read("data/Land_Use_2012_2018.gejson")

# sharswood_historical_land_use <- land_use_2012_2018 |> 
  # st_transform(st_crs(sharswood_bg_sf)) |> 
  # st_filter(sharswood_bg_sf, .predicate = st_intersects)
```

```{r, eval = FALSE}
# need to use a filtered .geojson with file size < 100 MB
sharswood_land_use <- st_read("data/sharswood_land_use.geojson") |>
  st_transform(st_crs(sharswood_bg_sf))

ggplot(sharswood_land_use) +
  geom_sf() +
  theme_void()
```

--------------------------------------------------------------------------------

## Part 3: Comprehensive Visualization and Analysis

--------------------------------------------------------------------------------

### Step 1: Rename Columns for ACS Year

### Step 2: Facet Maps by Period

### Step 3: Change Maps

