---
title: "Demographic Changes at Census Tract Level - Sharswood"
subtitle: "URBS 4000: Urban Studies Thesis"
author: "Jed Chew"
date: today
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
    embed-resources: true
execute:
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 80
---

## Project Title: Mixed by Design

### *A Case Study of the Philadelphia Housing Authority's (PHA) Choice Neighborhoods Redevelopment of Sharswood*

For my Urban Studies thesis, I am researching the PHA's Choice Neighborhoods
redevelopment of the Sharswood neighborhood in North Philadelphia. I have two
main research questions about the process and outcome of this redevelopment:

\(1\) the **process** by which the PHA aligned the politics, finance, and design
for the redevelopment of Sharswood; andÂ 

\(2\) the early redevelopment **outcomes** relative to the Choice Neighborhoods
Initiative (CNI) vision of mixed-partners, mixed-use, and mixed-income

## Part 1: ACS Data

**American Community Survey (ACS) Estimates**

The first ACS 5-year estimate was released in late 2010 as a replacement of the
longform decennial Census. Every year, the ACS surveys about 1 in 40 housing
units to produce 1-year estimates, but these housing units must not have been
surveyed in the previous five years. Hence, the 5-year estimate incorporates
five years of non-overlapping data (approximately 1 in 8 housing units) to
recreate the longform of the decennial census.

In this exploratory data analysis, I used three separate (i.e. no overlapping
years) ACS 5-year estimates to provide pre- and post-redevelopment snapshots:
2009-2012, 2013-17, and 2018-2022.

There are two main limitations with this methodology:

1.  The census tracts do not align exactly with the boundaries of the Sharswood
    redevelopment area
2.  5-year estimates also smooth out significant redevelopment events over
    multiple years, and it is challenging to identify the critical junctures in
    the redevelopment process and their direct impact on the neighborhood

### Step 1: Load Philadelphia Demographic Data using `tidycensus`

```{r, echo = FALSE, include = FALSE}
# Load required packages
library(tidyverse)
library(tidycensus)
library(janitor)
library(sf)
library(tigris)
library(scales)
library(patchwork)
library(RColorBrewer)
library(units)
library(knitr)
library(caret)

# Set Census API key
census_api_key("fe841b7ef0aa73d9579f0517bd1c8f26d33c789b")

# Get working directory
getwd()
```

```{r, eval = FALSE}
# Load all available variables for ACS 5-year 2022
acs_vars_2022 <- load_variables(2022, "acs5", cache = TRUE)
```

```{r, results = 'hide'}
# Helper Variables for Summing Population Values for Children aged 5-19
child_pop = c("B01001_004", "B01001_005", "B01001_006", "B01001_007", 
                "B01001_028", "B01001_029", "B01001_030", "B01001_031")


# Helper Variable for Summing Population Values for Elderly Population
elderly_pop = c("B01001_020", "B01001_021", "B01001_022", "B01001_023", 
                "B01001_024", "B01001_025", 
                "B01001_044", "B01001_045", "B01001_046", 
                "B01001_047", "B01001_048", "B01001_049")

# Helper Function for Variables
vars <- c(
  total_pop = "B01003_001",
  child_pop = child_pop,
  elderly_pop = elderly_pop,
  median_income = "B19013_001",
  poverty_total = "B17001_001",
  poverty_level = "B17001_002",
  White     = "B03002_003",
  Black     = "B03002_004",
  Hispanic  = "B03002_012"
)

# Helper Function for Summarizing ACS
summarize_acs <- function(df) {
  df |> 
       mutate(
      # totals (E) and MOEs (M; combined by quadrature)
      elderly_popE = rowSums(across(matches("^elderly_pop\\d+E$")), na.rm = TRUE),
      elderly_popM = sqrt(rowSums(across(matches("^elderly_pop\\d+M$"), ~ (.x)^2), na.rm = TRUE)),
      child_popE   = rowSums(across(matches("^child_pop\\d+E$")),   na.rm = TRUE),
      child_popM   = sqrt(rowSums(across(matches("^child_pop\\d+M$"),   ~ (.x)^2), na.rm = TRUE)),

      # percentages
      pct_elderly  = round((elderly_popE / total_popE) * 100, 2),
      pct_child    = round((child_popE   / total_popE) * 100, 2),
      pct_white    = round((WhiteE       / total_popE) * 100, 2),
      pct_black    = round((BlackE       / total_popE) * 100, 2),
      pct_hispanic = round((HispanicE    / total_popE) * 100, 2),
      pct_poverty  = round((poverty_levelE / poverty_totalE) * 100, 2)
    ) |>
    select(any_of(c(
      "GEOID", "tract_name", "county_name", "total_popE", "median_incomeE",
      "elderly_popE", "elderly_popM", "pct_elderly",
      "child_popE", "child_popM", "pct_child",
      "pct_poverty", "pct_white", "pct_black", "pct_hispanic", "geometry")))
}
```

```{r, results = 'hide'}
# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_tract_2022_data <- get_acs(
  geography = "tract",
  variables = vars,
  state = "PA",
  county = "Philadelphia",
  year = 2022,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)

# Clean the county names to remove state name and "County" 
phl_tract_2022_clean <- phl_tract_2022_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = "; "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )
phl_tract_2022_summary <- summarize_acs(phl_tract_2022_clean)
```

--------------------------------------------------------------------------------

### Step 2: Filter Data for Sharswood

```{r}
# Filter Census Tracts for Sharswood
sharswood_2022_tract_sf <- phl_tract_2022_summary |> 
  filter(tract_name %in% c("138", "139"))

sharswood_2022_tract <- sharswood_2022_tract_sf |> 
  st_drop_geometry()
sharswood_2022_tract
```

--------------------------------------------------------------------------------

### Step 3: Repeat Process for 2013-2017 ACS 5-Yr Estimates

```{r, results = 'hide'}
# Get tract-level demographic data from 2017 ACS 5-Yr Estimates for Philadelphia
phl_2017_tract_data <- get_acs(
  geography = "tract",
  variables = vars,
  state = "PA",
  county = "Philadelphia",
  year = 2017,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)

# Clean the county names to remove state name and "County" 
phl_2017_tract_clean <- phl_2017_tract_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = ", "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )
phl_2017_tract_summary <- summarize_acs(phl_2017_tract_clean)
```

```{r}
# Filter Census Tracts for Sharswood
sharswood_2017_tract_sf <- phl_2017_tract_summary |> 
  filter(tract_name == c("138", "139"))

sharswood_2017_tract <- sharswood_2017_tract_sf |> 
  st_drop_geometry()
sharswood_2017_tract
```

### Step 4: Repeat Process for 2008-2012 ACS 5-Yr Estimates

```{r, results = 'hide'}
# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_2012_tract_data <- get_acs(
  geography = "tract",
  variables = vars,
  state = "PA",
  county = "Philadelphia",
  year = 2012,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)

# Clean the county names to remove state name and "County" 
phl_2012_tract_clean <- phl_2012_tract_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = ", "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )
phl_2012_tract_summary <- summarize_acs(phl_2012_tract_clean)
```

```{r}
# Filter Census Tracts for Sharswood
sharswood_2012_tract_sf <- phl_2012_tract_summary |> 
  filter(tract_name %in% c("138", "139"))

sharswood_2012_tract <- sharswood_2012_tract_sf |> 
  st_drop_geometry()
sharswood_2012_tract
```

--------------------------------------------------------------------------------

## Part 2: Comprehensive Visualization and Analysis

--------------------------------------------------------------------------------

### Step 1: Rename Columns for ACS Year

```{r}
cols_to_suffix <- c(
  "total_popE","median_incomeE",
  "elderly_popE","elderly_popM","pct_elderly",
  "child_popE","child_popM","pct_child", "pct_poverty",
  "pct_white", "pct_black", "pct_hispanic"
)

s12_sf <- sharswood_2012_tract_sf |>
  rename_with(~ paste0(.x, "_2012"), any_of(cols_to_suffix))
s12 <- sharswood_2012_tract |>
  rename_with(~ paste0(.x, "_2012"), any_of(cols_to_suffix))
s17_sf <- sharswood_2017_tract_sf |>
  rename_with(~ paste0(.x, "_2017"), any_of(cols_to_suffix))
s17 <- sharswood_2017_tract |>
  rename_with(~ paste0(.x, "_2017"), any_of(cols_to_suffix))
s22_sf <- sharswood_2022_tract_sf |>
  rename_with(~ paste0(.x, "_2022"), any_of(cols_to_suffix))
s22 <- sharswood_2022_tract |>
  rename_with(~ paste0(.x, "_2022"), any_of(cols_to_suffix))
```

```{r}
compare_sf <- s12_sf |>
  select(GEOID, tract_name, county_name, geometry, ends_with("_2012")) |>
  left_join(select(s17, GEOID, ends_with("_2017")), by = "GEOID") |>
  left_join(select(s22, GEOID, ends_with("_2022")), by = "GEOID") |>
  mutate(
    pop_change_12_22       = total_popE_2022 - total_popE_2012,
    pop_pct_change_12_22   = 100 * (total_popE_2022 - total_popE_2012) / total_popE_2012,

    d_pct_child_12_22    = pct_child_2022    - pct_child_2012,
    d_pct_elderly_12_22  = pct_elderly_2022  - pct_elderly_2012,
    d_pct_poverty_12_22  = pct_poverty_2022  - pct_poverty_2012,
    d_pct_white_12_22    = pct_white_2022    - pct_white_2012,
    d_pct_black_12_22    = pct_black_2022    - pct_black_2012,
    d_pct_hispanic_12_22 = pct_hispanic_2022 - pct_hispanic_2012,


    d_income_12_17 = median_incomeE_2017 - median_incomeE_2012,
    d_income_17_22 = median_incomeE_2022 - median_incomeE_2017,
    d_income_12_22 = median_incomeE_2022 - median_incomeE_2012
  )

compare_table <- compare_sf |>
  st_drop_geometry() |>
  select(
    GEOID, tract_name,
    total_popE_2012, total_popE_2017, total_popE_2022, pop_change_12_22, pop_pct_change_12_22,
    pct_child_2012,  pct_child_2017,  pct_child_2022,  d_pct_child_12_22,
    pct_elderly_2012,pct_elderly_2017,pct_elderly_2022,d_pct_elderly_12_22,
    pct_poverty_2012,pct_poverty_2017,pct_poverty_2022,d_pct_poverty_12_22,
    pct_white_2012,  pct_white_2017,  pct_white_2022,  d_pct_white_12_22,
    pct_black_2012,  pct_black_2017,  pct_black_2022,  d_pct_black_12_22,
    pct_hispanic_2012,pct_hispanic_2017,pct_hispanic_2022,d_pct_hispanic_12_22,
    median_incomeE_2012, median_incomeE_2017, median_incomeE_2022, d_income_12_17, d_income_17_22,
  )
kable(compare_table, digits = 2, caption = "Sharswood tracts: ACS 2008â12 vs 2013â17 vs 2018â22")
```

```{r}
# Table 1: Population
tbl_pop <- compare_sf |>
  st_drop_geometry() |>
  select(
    GEOID, total_popE_2012, total_popE_2017, total_popE_2022,
    pop_change_12_22, pop_pct_change_12_22,
    pct_child_2012, pct_child_2017, pct_child_2022, d_pct_child_12_22,
    pct_elderly_2012, pct_elderly_2017, pct_elderly_2022, d_pct_elderly_12_22
  ) |>
  rename(
    `Census Tract` = GEOID,
    `Total Pop (2012)` = total_popE_2012,
    `Total Pop (2017)` = total_popE_2017,
    `Total Pop (2022)` = total_popE_2022,
    `Î pop 12â22`      = pop_change_12_22,
    `% change 12â22`   = pop_pct_change_12_22,
    `Child % 2012`     = pct_child_2012,
    `Child % 2017`     = pct_child_2017,
    `Child % 2022`     = pct_child_2022,
    `Î Child (pp) 12â22` = d_pct_child_12_22,
    `Elderly % 2012`     = pct_elderly_2012,
    `Elderly % 2017`     = pct_elderly_2017,
    `Elderly % 2022`     = pct_elderly_2022,
    `Î Elderly (pp) 12â22` = d_pct_elderly_12_22
  )

kable(tbl_pop, digits = 2, caption = "Sharswood: Changes in Population")
```

```{r}
# Table 2: Race
tbl_race <- compare_sf |>
  st_drop_geometry() |>
  select(
    GEOID, pct_white_2012, pct_white_2017, pct_white_2022, d_pct_white_12_22,
    pct_black_2012, pct_black_2017, pct_black_2022, d_pct_black_12_22,
    pct_hispanic_2012, pct_hispanic_2017, pct_hispanic_2022, d_pct_hispanic_12_22
  ) |>
  rename(
    `Census Tract` = GEOID,
    `White % 2012` = pct_white_2012,
    `White % 2017` = pct_white_2017,
    `White % 2022` = pct_white_2022,
    `Î White (pp) 12â22` = d_pct_white_12_22,
    `Black % 2012` = pct_black_2012,
    `Black % 2017` = pct_black_2017,
    `Black % 2022` = pct_black_2022,
    `Î Black (pp) 12â22` = d_pct_black_12_22,
    `Hispanic % 2012` = pct_hispanic_2012,
    `Hispanic % 2017` = pct_hispanic_2017,
    `Hispanic % 2022` = pct_hispanic_2022,
    `Î Hispanic (pp) 12â22` = d_pct_hispanic_12_22
  )

kable(tbl_race, digits = 2, caption = "Sharswood: Changes in Race")
```

```{r}
# Table 3: Income
tbl_income <- compare_sf |>
  st_drop_geometry() |>
  select(
    GEOID, 
    pct_poverty_2012, pct_poverty_2017, pct_poverty_2022, d_pct_poverty_12_22,
    median_incomeE_2012, median_incomeE_2017, median_incomeE_2022,
    d_income_12_17, d_income_17_22, d_income_12_22
  ) |>
  rename(
    `Census Tract` = GEOID,
    `Poverty % 2012`      = pct_poverty_2012,
    `Poverty % 2017`      = pct_poverty_2017,
    `Poverty % 2022`      = pct_poverty_2022,
    `Î Poverty (pp) 12â22`= d_pct_poverty_12_22,
    `Median income (2012)`= median_incomeE_2012,
    `Median income (2017)`= median_incomeE_2017,
    `Median income (2022)`= median_incomeE_2022,
    `Î income 12â17`      = d_income_12_17,
    `Î income 17â22`      = d_income_17_22,
    `Î income 12â22`      = d_income_12_22
  )

kable(tbl_income, digits = 2, caption = "Sharswood: Changes in Income & Poverty",
      format.args = list(big.mark = ","))
```

### Step 2: Facet Maps by Period

```{r}
long_panel <- compare_sf |>
  pivot_longer(
    cols = matches("_(2012|2017|2022)$"),
    names_to = c("metric","period"),
    names_pattern = "(.+)_([0-9]{4})$",
    values_to = "value"
  )

# helper to draw a 3-panel small multiple for a metric
facet_metric <- function(metric_name, title, fill_lab, lab_fmt = NULL) {
  p <- long_panel %>%
    filter(metric == metric_name) %>%
    ggplot() +
    geom_sf(aes(fill = value), color = "grey25", linewidth = 0.25) +
    facet_wrap(~ period, nrow = 1) +
    labs(title = title, subtitle = "Panels: 2012, 2017, 2022",
         fill = fill_lab, caption = "ACS 5-year estimates") +
    theme_void() + theme(legend.position = "right")
  if (is.null(lab_fmt)) {
    p + scale_fill_viridis_c()
  } else {
    p + scale_fill_viridis_c(labels = lab_fmt)
  }
}

# draw small multiples for your new variables
facet_metric("pct_poverty",   "Sharswood: % in Poverty",           "%")
facet_metric("pct_white",     "Sharswood: % White (race alone)",   "%")
facet_metric("pct_black",     "Sharswood: % Black (race alone)",   "%")
facet_metric("pct_hispanic",  "Sharswood: % Hispanic (any race)",  "%")
facet_metric("pct_child",     "Sharswood: % Children (5â19)",      "%")
facet_metric("pct_elderly",   "Sharswood: % Elderly (65+)",        "%")
facet_metric("median_incomeE","Sharswood: Median Household Income","$", dollar_format())
```

### Step 3: Change Maps

```{r}
# helper to make a diverging change map
change_map <- function(col, title, legend) {
  ggplot(compare_sf) +
    geom_sf(aes(fill = .data[[col]]), color = "grey25", linewidth = 0.25) +
    scale_fill_gradient2(midpoint = 0, name = legend) +
    labs(title = title) +
    theme_void()
}

change_map("d_pct_poverty_12_22",  "Change in % Poverty (2012â2022)",  "Î pct-pts")
change_map("d_pct_child_12_22",    "Change in % Children (2012â2022)", "Î pct-pts")
change_map("d_pct_elderly_12_22",  "Change in % Elderly (2012â2022)",  "Î pct-pts")
change_map("d_pct_white_12_22",    "Change in % White (2012â2022)",    "Î pct-pts")
change_map("d_pct_black_12_22",    "Change in % Black (2012â2022)",    "Î pct-pts")
change_map("d_pct_hispanic_12_22", "Change in % Hispanic (2012â2022)", "Î pct-pts")
change_map("pop_pct_change_12_22", "Population % Change (2012â2022)",  "% change")
change_map("d_income_12_22",       "Change in Median Income (2012â2022) â period $", "$ change")
```

```{r}
bars <- long_panel |>
  filter(metric %in% c("pct_child","pct_elderly")) |>
  mutate(metric = recode(metric, pct_child = "% Children (5â19)", pct_elderly = "% Elderly (65+)"))

ggplot(bars, aes(x = period, y = value, fill = period)) +
  geom_col(width = 0.7) +
  facet_grid(metric ~ tract_name, scales = "free_y") +
  scale_y_continuous(labels = label_number(accuracy = 0.1)) +
  labs(title = "BeforeâAfter Comparison by Tract and Period",
       x = NULL, y = "Percent") +
  theme_minimal() + theme(legend.position = "none")
```

### Step 4: Composite Maps

**Multi-metric Ã Period Grid**

```{r}
grid_metrics <- c("pct_poverty","pct_child","pct_elderly","pct_black","pct_white","pct_hispanic")
long_subset <- long_panel %>% filter(metric %in% grid_metrics)

ggplot(long_subset) +
  geom_sf(aes(fill = value), color = "grey25", linewidth = 0.25) +
  facet_grid(metric ~ period) +
  scale_fill_viridis_c() +
  labs(title = "Sharswood: Key Demographic Rates by Period and Metric",
       caption = "ACS 5-year estimates") +
  theme_void() + theme(legend.position = "right")

```

**Bivariate change map**

```{r}
library(forcats)

bivar <- compare_sf %>%
  st_drop_geometry() %>%
  transmute(GEOID,
            d_pov = d_pct_poverty_12_22,
            d_inc = d_income_12_22) %>%
  mutate(
    c_pov = cut_number(d_pov, n = 3, labels = c("low Îpov","mid Îpov","high Îpov")),
    c_inc = cut_number(d_inc, n = 3, labels = c("low Îinc","mid Îinc","high Îinc")),
    bivar_class = interaction(fct_rev(c_pov), c_inc, sep = " / ", drop = TRUE)
  )

# simple 3x3 palette
pal <- c(
  "high Îpov / low Îinc"  = "#3F2949","high Îpov / mid Îinc" = "#435786","high Îpov / high Îinc" = "#4885C1",
  "mid Îpov / low Îinc"   = "#77324C","mid Îpov / mid Îinc"  = "#806A8A","mid Îpov / high Îinc"  = "#89A1C8",
  "low Îpov / low Îinc"   = "#AE3A4E","low Îpov / mid Îinc"  = "#BC7C8F","low Îpov / high Îinc"  = "#CABED0"
)

compare_bivar <- compare_sf %>% left_join(bivar, by = "GEOID")

ggplot(compare_bivar) +
  geom_sf(aes(fill = bivar_class), color = "grey25", linewidth = 0.25) +
  scale_fill_manual(values = pal, na.value = "grey85", name = "Î Poverty vs Î Income\n(2012â2022)") +
  labs(title = "Bivariate Change Map: Poverty (pct-pts) vs Income ($)") +
  theme_void()
```
