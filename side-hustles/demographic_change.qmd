---
title: "Demographic Changes at Census Tract Level - Sharswood"
subtitle: "URBS 4000: Urban Studies Thesis"
author: "Jed Chew"
date: today
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
    embed-resources: true
execute:
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 80
---

## Project Title: Mixed by Design

### *A Case Study of the Philadelphia Housing Authority's (PHA) Choice Neighborhoods Redevelopment of Sharswood*

For my Urban Studies thesis, I am researching the PHA's Choice Neighborhoods
redevelopment of the Sharswood neighborhood in North Philadelphia. I have two
main research questions about the process and outcome of this redevelopment:

\(1\) the **process** by which the PHA aligned the politics, finance, and design
for the redevelopment of Sharswood; andÂ 

\(2\) the early redevelopment **outcomes** relative to the Choice Neighborhoods
Initiative (CNI) vision of mixed-partners, mixed-use, and mixed-income

## Part 1: ACS Data

**American Community Survey (ACS) Estimates**

\<insert information from

### Step 1: Load Raw Data as csv files

-   Philadelphia census tracts, block groups, and neighborhood boundaries

```{r, echo = FALSE, include = FALSE}
# Load required packages
library(tidyverse)
library(tidycensus)
library(janitor)
library(sf)
library(tigris)
library(scales)
library(patchwork)
library(RColorBrewer)
library(units)
library(knitr)
library(caret)

# Set Census API key
census_api_key("fe841b7ef0aa73d9579f0517bd1c8f26d33c789b")

# Get working directory
getwd()
```

```{r, results = 'hide'}
# Load spatial data
census_tracts <- tracts(state = "PA", county = "Philadelphia", year = 2020, class = "sf", cb = TRUE, progress = FALSE)
block_grps <- block_groups(state = "PA", county = "Philadelphia", year = 2020, class = "sf",cb = TRUE, progress = FALSE)

# Standardize CRS
```

--------------------------------------------------------------------------------

### Step 2: Get Philadelphia Demographic Data using `tidycensus`

```{r, eval = FALSE}
# Load all available variables for ACS 5-year 2022
acs_vars_2022 <- load_variables(2022, "acs5", cache = TRUE)
```

```{r, results = 'hide'}
# Helper Variables for Summing Population Values for Children aged 5-19
child_pop = c("B01001_004", "B01001_005", "B01001_006", "B01001_007", 
                "B01001_028", "B01001_029", "B01001_030", "B01001_031")


# Helper Variable for Summing Population Values for Elderly Population
elderly_pop = c("B01001_020", "B01001_021", "B01001_022", "B01001_023", 
                "B01001_024", "B01001_025", 
                "B01001_044", "B01001_045", "B01001_046", 
                "B01001_047", "B01001_048", "B01001_049")

# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_tract_2022_data <- get_acs(
  geography = "tract",
  variables = c(
    total_pop = "B01003_001",
    child_pop = child_pop,
    elderly_pop = elderly_pop,
    median_income = "B19013_001",
    poverty = "B17001_001",
    White     = "B03002_003",
    Black     = "B03002_004",
    Hispanic  = "B03002_012"
  ),
  state = "PA",
  county = "Philadelphia",
  year = 2022,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)

# Clean the county names to remove state name and "County" 
phl_tract_2022_clean <- phl_tract_2022_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = "; "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )

phl_tract_2022_summary <- phl_tract_2022_clean |>
  mutate(
    elderly_popE = rowSums(across(matches("^elderly_pop\\d+E$")), na.rm = TRUE),
    # for MOE, ACS guidance is to combine by quadrature
    elderly_popM = sqrt(rowSums(across(matches("^elderly_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_elderly = round((elderly_popE / total_popE) *100, 2),
    child_popE = rowSums(across(matches("^child_pop\\d+E$")), na.rm = TRUE),
    child_popM = sqrt(rowSums(across(matches("^child_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_child = round((child_popE/total_popE) * 100, 2),
  ) |>
  select(GEOID, tract_name, county_name, total_popE, median_incomeE, elderly_popE, 
         elderly_popM, pct_elderly, child_popE, child_popM, pct_child)
```

--------------------------------------------------------------------------------

### Step 3: Filter Data for Sharswood

```{r}
# Filter Census Tracts for Sharswood
sharswood_2022_tract_sf <- phl_tract_2022_summary |> 
  filter(tract_name %in% c("138", "139"))

ggplot(sharswood_2022_tract_sf) +
  geom_sf() +
  theme_void()

sharswood_2022_tract <- sharswood_2022_tract_sf |> 
  st_drop_geometry()
sharswood_2022_tract
```

--------------------------------------------------------------------------------

### Step 4: Repeat Process for 2013-2017 ACS 5-Yr Estimates

```{r, results = 'hide'}
# Helper Variables for Summing Population Values for Children aged 5-19
child_pop = c("B01001_004", "B01001_005", "B01001_006", "B01001_007", 
                "B01001_028", "B01001_029", "B01001_030", "B01001_031")


# Helper Variable for Summing Population Values for Elderly Population
elderly_pop = c("B01001_020", "B01001_021", "B01001_022", "B01001_023", 
                "B01001_024", "B01001_025", 
                "B01001_044", "B01001_045", "B01001_046", 
                "B01001_047", "B01001_048", "B01001_049")

# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_2017_tract_data <- get_acs(
  geography = "tract",
  variables = c(
    total_pop = "B01003_001",
    child_pop = child_pop,
    elderly_pop = elderly_pop,
    median_income = "B19013_001",
    poverty = "B17001_001",
    White     = "B03002_003",
    Black     = "B03002_004",
    Hispanic  = "B03002_012"
  ),
  state = "PA",
  county = "Philadelphia",
  year = 2017,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)
```

```{r}
# Clean the county names to remove state name and "County" 
phl_2017_tract_clean <- phl_2017_tract_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = ", "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )
```

```{r}
phl_2017_tract_summary <- phl_2017_tract_clean |>
  mutate(
    elderly_popE = rowSums(across(matches("^elderly_pop\\d+E$")), na.rm = TRUE),
    # for MOE, ACS guidance is to combine by quadrature
    elderly_popM = sqrt(rowSums(across(matches("^elderly_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_elderly = round((elderly_popE / total_popE) *100, 2),
    child_popE = rowSums(across(matches("^child_pop\\d+E$")), na.rm = TRUE),
    child_popM = sqrt(rowSums(across(matches("^child_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_child = round((child_popE/total_popE) * 100, 2),
  ) |>
  select(GEOID, tract_name, county_name, total_popE, median_incomeE, elderly_popE,
         elderly_popM, pct_elderly, child_popE, child_popM, pct_child)
```

```{r}
# Filter Census Tracts for Sharswood
sharswood_2017_tract_sf <- phl_2017_tract_summary |> 
  filter(tract_name == c("138", "139"))

ggplot(sharswood_2017_tract_sf) +
  geom_sf() +
  theme_void()

sharswood_2017_tract <- sharswood_2017_tract_sf |> 
  st_drop_geometry()
sharswood_2017_tract
```

### Step 5: Repeat Process for 2008-2012 ACS 5-Yr Estimates

```{r, results = 'hide'}
# Helper Variables for Summing Population Values for Children aged 5-19
child_pop = c("B01001_004", "B01001_005", "B01001_006", "B01001_007", 
                "B01001_028", "B01001_029", "B01001_030", "B01001_031")


# Helper Variable for Summing Population Values for Elderly Population
elderly_pop = c("B01001_020", "B01001_021", "B01001_022", "B01001_023", 
                "B01001_024", "B01001_025", 
                "B01001_044", "B01001_045", "B01001_046", 
                "B01001_047", "B01001_048", "B01001_049")

# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_2012_tract_data <- get_acs(
  geography = "tract",
  variables = c(
    total_pop = "B01003_001",
    child_pop = child_pop,
    elderly_pop = elderly_pop,
    median_income = "B19013_001",
    poverty = "B17001_001",
    White     = "B03002_003",
    Black     = "B03002_004",
    Hispanic  = "B03002_012"
  ),
  state = "PA",
  county = "Philadelphia",
  year = 2012,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)
```

```{r}
# Clean the county names to remove state name and "County" 
phl_2012_tract_clean <- phl_2012_tract_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = ", "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )

phl_2012_tract_summary <- phl_2012_tract_clean |>
  mutate(
    elderly_popE = rowSums(across(matches("^elderly_pop\\d+E$")), na.rm = TRUE),
    # for MOE, ACS guidance is to combine by quadrature
    elderly_popM = sqrt(rowSums(across(matches("^elderly_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_elderly = round((elderly_popE / total_popE) *100, 2),
    child_popE = rowSums(across(matches("^child_pop\\d+E$")), na.rm = TRUE),
    child_popM = sqrt(rowSums(across(matches("^child_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_child = round((child_popE/total_popE) * 100, 2),
  ) |>
  select(GEOID, tract_name, county_name, total_popE, median_incomeE, elderly_popE,
         elderly_popM, pct_elderly, child_popE, child_popM, pct_child)
```

```{r}
# Filter Census Tracts for Sharswood
sharswood_2012_tract_sf <- phl_2012_tract_summary |> 
  filter(tract_name %in% c("138", "139"))

ggplot(sharswood_2012_tract_sf) +
  geom_sf() +
  theme_void()

sharswood_2012_tract <- sharswood_2012_tract_sf |> 
  st_drop_geometry()
sharswood_2012_tract
```

--------------------------------------------------------------------------------

## Part 2: Comprehensive Visualization and Analysis

--------------------------------------------------------------------------------
