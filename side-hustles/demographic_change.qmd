---
title: "Demographic Changes at Census Tract Level - Sharswood"
subtitle: "URBS 4000: Urban Studies Thesis"
author: "Jed Chew"
date: today
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
    embed-resources: true
execute:
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 80
---

## Project Title: Mixed by Design

### *A Case Study of the Philadelphia Housing Authority's (PHA) Choice Neighborhoods Redevelopment of Sharswood*

For my Urban Studies thesis, I am researching the PHA's Choice Neighborhoods
redevelopment of the Sharswood neighborhood in North Philadelphia. I have two
main research questions about the process and outcome of this redevelopment:

\(1\) the **process** by which the PHA aligned the politics, finance, and design
for the redevelopment of Sharswood; andÂ 

\(2\) the early redevelopment **outcomes** relative to the Choice Neighborhoods
Initiative (CNI) vision of mixed-partners, mixed-use, and mixed-income

## Part 1: ACS Data

**American Community Survey (ACS) Estimates**

\<insert information from

### Step 1: Load Raw Data as csv files

-   Philadelphia census tracts, block groups, and neighborhood boundaries

```{r, echo = FALSE, include = FALSE}
# Load required packages
library(tidyverse)
library(tidycensus)
library(janitor)
library(sf)
library(tigris)
library(scales)
library(patchwork)
library(RColorBrewer)
library(units)
library(knitr)
library(caret)

# Set Census API key
census_api_key("fe841b7ef0aa73d9579f0517bd1c8f26d33c789b")

# Get working directory
getwd()
```

```{r, results = 'hide'}
# Load spatial data
census_tracts <- tracts(state = "PA", county = "Philadelphia", year = 2020, class = "sf", cb = TRUE, progress = FALSE)
block_grps <- block_groups(state = "PA", county = "Philadelphia", year = 2020, class = "sf",cb = TRUE, progress = FALSE)

# Standardize CRS
```

--------------------------------------------------------------------------------

### Step 2: Get Philadelphia Demographic Data using `tidycensus`

```{r, eval = FALSE}
# Load all available variables for ACS 5-year 2022
acs_vars_2022 <- load_variables(2022, "acs5", cache = TRUE)
```

```{r, results = 'hide'}
# Helper Variables for Summing Population Values for Children aged 5-19
child_pop = c("B01001_004", "B01001_005", "B01001_006", "B01001_007", 
                "B01001_028", "B01001_029", "B01001_030", "B01001_031")


# Helper Variable for Summing Population Values for Elderly Population
elderly_pop = c("B01001_020", "B01001_021", "B01001_022", "B01001_023", 
                "B01001_024", "B01001_025", 
                "B01001_044", "B01001_045", "B01001_046", 
                "B01001_047", "B01001_048", "B01001_049")

# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_tract_2022_data <- get_acs(
  geography = "tract",
  variables = c(
    total_pop = "B01003_001",
    child_pop = child_pop,
    elderly_pop = elderly_pop,
    median_income = "B19013_001",
    poverty = "B17001_001",
    White     = "B03002_003",
    Black     = "B03002_004",
    Hispanic  = "B03002_012"
  ),
  state = "PA",
  county = "Philadelphia",
  year = 2022,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)

# Clean the county names to remove state name and "County" 
phl_tract_2022_clean <- phl_tract_2022_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = "; "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )

phl_tract_2022_summary <- phl_tract_2022_clean |>
  mutate(
    elderly_popE = rowSums(across(matches("^elderly_pop\\d+E$")), na.rm = TRUE),
    # for MOE, ACS guidance is to combine by quadrature
    elderly_popM = sqrt(rowSums(across(matches("^elderly_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_elderly = round((elderly_popE / total_popE) *100, 2),
    child_popE = rowSums(across(matches("^child_pop\\d+E$")), na.rm = TRUE),
    child_popM = sqrt(rowSums(across(matches("^child_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_child = round((child_popE/total_popE) * 100, 2),
  ) |>
  select(GEOID, tract_name, county_name, total_popE, median_incomeE, elderly_popE, 
         elderly_popM, pct_elderly, child_popE, child_popM, pct_child)
```

--------------------------------------------------------------------------------

### Step 3: Filter Data for Sharswood

```{r}
# Filter Census Tracts for Sharswood
sharswood_2022_tract_sf <- phl_tract_2022_summary |> 
  filter(tract_name %in% c("138", "139"))

ggplot(sharswood_2022_tract_sf) +
  geom_sf() +
  theme_void()

sharswood_2022_tract <- sharswood_2022_tract_sf |> 
  st_drop_geometry()
sharswood_2022_tract
```

--------------------------------------------------------------------------------

### Step 4: Repeat Process for 2013-2017 ACS 5-Yr Estimates

```{r, results = 'hide'}
# Helper Variables for Summing Population Values for Children aged 5-19
child_pop = c("B01001_004", "B01001_005", "B01001_006", "B01001_007", 
                "B01001_028", "B01001_029", "B01001_030", "B01001_031")


# Helper Variable for Summing Population Values for Elderly Population
elderly_pop = c("B01001_020", "B01001_021", "B01001_022", "B01001_023", 
                "B01001_024", "B01001_025", 
                "B01001_044", "B01001_045", "B01001_046", 
                "B01001_047", "B01001_048", "B01001_049")

# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_2017_tract_data <- get_acs(
  geography = "tract",
  variables = c(
    total_pop = "B01003_001",
    child_pop = child_pop,
    elderly_pop = elderly_pop,
    median_income = "B19013_001",
    poverty = "B17001_001",
    White     = "B03002_003",
    Black     = "B03002_004",
    Hispanic  = "B03002_012"
  ),
  state = "PA",
  county = "Philadelphia",
  year = 2017,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)
```

```{r}
# Clean the county names to remove state name and "County" 
phl_2017_tract_clean <- phl_2017_tract_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = ", "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )
```

```{r}
phl_2017_tract_summary <- phl_2017_tract_clean |>
  mutate(
    elderly_popE = rowSums(across(matches("^elderly_pop\\d+E$")), na.rm = TRUE),
    # for MOE, ACS guidance is to combine by quadrature
    elderly_popM = sqrt(rowSums(across(matches("^elderly_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_elderly = round((elderly_popE / total_popE) *100, 2),
    child_popE = rowSums(across(matches("^child_pop\\d+E$")), na.rm = TRUE),
    child_popM = sqrt(rowSums(across(matches("^child_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_child = round((child_popE/total_popE) * 100, 2),
  ) |>
  select(GEOID, tract_name, county_name, total_popE, median_incomeE, elderly_popE,
         elderly_popM, pct_elderly, child_popE, child_popM, pct_child)
```

```{r}
# Filter Census Tracts for Sharswood
sharswood_2017_tract_sf <- phl_2017_tract_summary |> 
  filter(tract_name == c("138", "139"))

ggplot(sharswood_2017_tract_sf) +
  geom_sf() +
  theme_void()

sharswood_2017_tract <- sharswood_2017_tract_sf |> 
  st_drop_geometry()
sharswood_2017_tract
```

### Step 5: Repeat Process for 2008-2012 ACS 5-Yr Estimates

```{r, results = 'hide'}
# Helper Variables for Summing Population Values for Children aged 5-19
child_pop = c("B01001_004", "B01001_005", "B01001_006", "B01001_007", 
                "B01001_028", "B01001_029", "B01001_030", "B01001_031")


# Helper Variable for Summing Population Values for Elderly Population
elderly_pop = c("B01001_020", "B01001_021", "B01001_022", "B01001_023", 
                "B01001_024", "B01001_025", 
                "B01001_044", "B01001_045", "B01001_046", 
                "B01001_047", "B01001_048", "B01001_049")

# Get tract-level demographic data from 2022 ACS 5-Yr Estimates for Philadelphia
phl_2012_tract_data <- get_acs(
  geography = "tract",
  variables = c(
    total_pop = "B01003_001",
    child_pop = child_pop,
    elderly_pop = elderly_pop,
    median_income = "B19013_001",
    poverty = "B17001_001",
    White     = "B03002_003",
    Black     = "B03002_004",
    Hispanic  = "B03002_012"
  ),
  state = "PA",
  county = "Philadelphia",
  year = 2012,
  survey = "acs5",
  output = "wide",
  geometry = TRUE
)
```

```{r}
# Clean the county names to remove state name and "County" 
phl_2012_tract_clean <- phl_2012_tract_data |> 
  separate(
    NAME, 
    into = c("tract_name", "county_name", "state_name"), 
    sep = ", "
  ) |> 
  mutate(
    tract_name = str_remove(tract_name, "Census Tract "),
    county_name = str_remove(county_name, " County")
  )

phl_2012_tract_summary <- phl_2012_tract_clean |>
  mutate(
    elderly_popE = rowSums(across(matches("^elderly_pop\\d+E$")), na.rm = TRUE),
    # for MOE, ACS guidance is to combine by quadrature
    elderly_popM = sqrt(rowSums(across(matches("^elderly_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_elderly = round((elderly_popE / total_popE) *100, 2),
    child_popE = rowSums(across(matches("^child_pop\\d+E$")), na.rm = TRUE),
    child_popM = sqrt(rowSums(across(matches("^child_pop\\d+M$"))^2, na.rm = 
                                  TRUE)),
    pct_child = round((child_popE/total_popE) * 100, 2),
  ) |>
  select(GEOID, tract_name, county_name, total_popE, median_incomeE, elderly_popE,
         elderly_popM, pct_elderly, child_popE, child_popM, pct_child)
```

```{r}
# Filter Census Tracts for Sharswood
sharswood_2012_tract_sf <- phl_2012_tract_summary |> 
  filter(tract_name %in% c("138", "139"))

ggplot(sharswood_2012_tract_sf) +
  geom_sf() +
  theme_void()

sharswood_2012_tract <- sharswood_2012_tract_sf |> 
  st_drop_geometry()
sharswood_2012_tract
```

--------------------------------------------------------------------------------

## Part 2: Comprehensive Visualization and Analysis

--------------------------------------------------------------------------------

### Step 1: Rename Columns for ACS Year

```{r}
cols_to_suffix <- c(
  "total_popE","median_incomeE",
  "elderly_popE","elderly_popM","pct_elderly",
  "child_popE","child_popM","pct_child"
)

s12_sf <- sharswood_2012_tract_sf |>
  rename_with(~ paste0(.x, "_2012"), any_of(cols_to_suffix))
s12 <- sharswood_2012_tract |>
  rename_with(~ paste0(.x, "_2012"), any_of(cols_to_suffix))
s17_sf <- sharswood_2017_tract_sf |>
  rename_with(~ paste0(.x, "_2017"), any_of(cols_to_suffix))
s17 <- sharswood_2017_tract |>
  rename_with(~ paste0(.x, "_2017"), any_of(cols_to_suffix))
s22_sf <- sharswood_2022_tract_sf |>
  rename_with(~ paste0(.x, "_2022"), any_of(cols_to_suffix))
s22 <- sharswood_2022_tract |>
  rename_with(~ paste0(.x, "_2022"), any_of(cols_to_suffix))
```

```{r}
compare_sf <- s12_sf |>
  select(GEOID, tract_name, county_name, geometry, ends_with("_2012")) |>
  left_join(select(s17, GEOID, ends_with("_2017")), by = "GEOID") |>
  left_join(select(s22, GEOID, ends_with("_2022")), by = "GEOID") |>
  mutate(
    pop_change_12_22       = total_popE_2022 - total_popE_2012,
    pop_pct_change_12_22   = 100 * (total_popE_2022 - total_popE_2012) / pmax(1, total_popE_2012),

    child_pct_change_12_22   = pct_child_2022   - pct_child_2012,
    elderly_pct_change_12_22 = pct_elderly_2022 - pct_elderly_2012,

    income_change_12_22 = median_incomeE_2022 - median_incomeE_2012,
    income_change_12_17 = median_incomeE_2017 - median_incomeE_2012,
    income_change_17_22 = median_incomeE_2022 - median_incomeE_2017
  )

compare_table <- compare_sf |>
  st_drop_geometry() |>
  select(
    GEOID, tract_name,
    total_popE_2012, total_popE_2017, total_popE_2022, pop_change_12_22, pop_pct_change_12_22,
    pct_child_2012, pct_child_2017, pct_child_2022, child_pct_change_12_22,
    pct_elderly_2012, pct_elderly_2017, pct_elderly_2022, elderly_pct_change_12_22,
    median_incomeE_2012, median_incomeE_2017, median_incomeE_2022,
    income_change_12_17, income_change_17_22, income_change_12_22
  )
kable(compare_table, digits = 2, caption = "Sharswood tracts: ACS 2008â12 vs 2013â17 vs 2018â22")
```

### Step 2: Facet Maps by Period

```{r}
long_panel <- compare_sf |>
  pivot_longer(
    cols = matches("_(2012|2017|2022)$"),
    names_to = c("metric","period"),
    names_pattern = "(.+)_([0-9]{4})$",
    values_to = "value"
  )

# (A) % Children
ggplot(filter(long_panel, metric == "pct_child")) +
  geom_sf(aes(fill = value), color = "grey25", linewidth = 0.25) +
  facet_wrap(~ period, nrow = 1) +
  scale_fill_viridis_c(name = "% age 5â19") +
  labs(title = "Sharswood: % Children by ACS period",
       subtitle = "2008â12 (2012), 2013â17 (2017), 2018â22 (2022)",
       caption = "ACS 5-year estimates") +
  theme_void() + theme(legend.position = "right")

# (B) % Elderly
ggplot(filter(long_panel, metric == "pct_elderly")) +
  geom_sf(aes(fill = value), color = "grey25", linewidth = 0.25) +
  facet_wrap(~ period, nrow = 1) +
  scale_fill_viridis_c(name = "% age 65+") +
  labs(title = "Sharswood: % Elderly by ACS period") +
  theme_void()

# (C) Median income (note comparability caveat)
ggplot(filter(long_panel, metric == "median_incomeE")) +
  geom_sf(aes(fill = value), color = "grey25", linewidth = 0.25) +
  facet_wrap(~ period, nrow = 1) +
  scale_fill_viridis_c(name = "Median HH income",
                       labels = dollar_format(accuracy = 1)) +
  labs(title = "Sharswood: Median Household Income",
       subtitle = "Each periodâs dollars (not adjusted to a common base year)") +
  theme_void()
```

### Step 3: Change Maps

```{r}
# Î % Children
ggplot(compare_sf) +
  geom_sf(aes(fill = child_pct_change_12_22), color = "grey25", linewidth = 0.25) +
  scale_fill_gradient2(name = "Î % children\n(2022 â 2012)", midpoint = 0) +
  labs(title = "Change in % Children, 2008â12 â 2018â22") +
  theme_void()

# Î % Elderly
ggplot(compare_sf) +
  geom_sf(aes(fill = elderly_pct_change_12_22), color = "grey25", linewidth = 0.25) +
  scale_fill_gradient2(name = "Î % elderly\n(2022 â 2012)", midpoint = 0) +
  labs(title = "Change in % Elderly, 2008â12 â 2018â22") +
  theme_void()

# Population % change
ggplot(compare_sf) +
  geom_sf(aes(fill = pop_pct_change_12_22), color = "grey25", linewidth = 0.25) +
  scale_fill_gradient2(name = "Population % change\n(2022 â 2012)", midpoint = 0,
                       labels = label_percent(scale = 1, accuracy = 1)) +
  labs(title = "Population % Change, 2008â12 â 2018â22") +
  theme_void()
```

```{r}
bars <- long_panel |>
  filter(metric %in% c("pct_child","pct_elderly")) |>
  mutate(metric = recode(metric, pct_child = "% Children (5â19)", pct_elderly = "% Elderly (65+)"))

ggplot(bars, aes(x = period, y = value, fill = period)) +
  geom_col(width = 0.7) +
  facet_grid(metric ~ tract_name, scales = "free_y") +
  scale_y_continuous(labels = label_number(accuracy = 0.1)) +
  labs(title = "BeforeâAfter Comparison by Tract and Period",
       x = NULL, y = "Percent") +
  theme_minimal() + theme(legend.position = "none")
```
