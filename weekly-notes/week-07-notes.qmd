---
title: "Week 7 Notes - Model Diagnostics and Spatial Autocorrelation"
date: "2025-10-20"
---

## Key Concepts Learned

### Regression Workflow

**Building the model:**

1.  Visualize relationships
2.  Engineer features
3.  Fir the model
4.  Evaluate performance (RMSE, R²)
5.  Check assumptions

**Spatial Diagnostics**

6.  Are errors random or clustered?
7.  Do we predict better in some areas?
8.  Is there remaining spatial structure?

**Spatial Autocorrelation in Errors (i.e. Clustered Errors)**

-   spatial pattern visible (not random scatter)

-   under/over-predict in areas

-   model misses something about location

**Moran's I measures Spatial Autocorrelation**

*Intuition: When I’m above/below average, are my neighbors also above/below average?*

**Range:** -1 to +1

-   **+1** = Perfect positive correlation (clustering)

-   **0** = Random spatial pattern

-   **-1** = Perfect negative correlation (dispersion)

------------------------------------------------------------------------

**Defining Neighbors:**

![](images/clipboard-88185342.png){width="987"}

**Sample Example:**

![](images/clipboard-2995180422.png){width="451"}

**Step 1: Calculate Deviations from Mean**

![](images/clipboard-2249328638.png){width="471"}

**Positive deviation** = we over-predicted (actual \> predicted)\
**Negative deviation** = we under-predicted (actual \< predicted)

**Step 2: Multiply Neighbor Pair Deviations**

![](images/clipboard-645011366.png)

-   Lots of positive products → **High Moran’s I** (clustering)

-   Products near zero → **Low Moran’s I** (random)

-   Negative products → **Negative Moran’s I** (rare with errors)

**Step 3: Possible Solutions**

If Moran’s I shows clustered errors:

✅ **Add more spatial features** (different buffers, more amenities)\
✅ **Try neighborhood fixed effects**\
✅ **Use spatial cross-validation**

------------------------------------------------------------------------

**Issues with Spatial Lag for Prediction:**

1.  **Simultaneity Problem (circular logic)**

-   My price affects neighbors → neighbors affect me

-   OLS estimates are biased and inconsistent

2.  **Prediction Paradox (poor generalizability)**

-   Need neighbors’ prices to predict my price

-   But for new developments or future periods, those prices don’t exist yet

3.  **Data Leakage in CV**

-   Spatial Lag "leaks" information from test set

-   Artificially good performance that won't hold

![](images/clipboard-4100208631.png){width="251"}

**Key Idea: Match method to purpose:** 

-   **inference** → spatial lag/error models; **prediction** → spatial features

-   **our predicton approach:** Instead of modeling dependence in Y (prices), model proximity in X (predictors)

## Coding Techniques

-   **Create and Plot the Spatial Lag**

```{r, eval = FALSE}
library(spdep)

# Define neighbors (5 nearest)
coords <- st_coordinates(boston_test)
neighbors <- knn2nb(knearneigh(coords, k=5))
weights <- nb2listw(neighbors, style="W")

# Calculate spatial lag of errors
boston_test$error_lag <- lag.listw(weights, boston_test$error)
```

-   **Calculate Moran's I**

```{r, eval = FALSE}
# Test for spatial autocorrelation in errors
moran_test <- moran.mc(
  boston_test$error,        # Your errors
  weights,                  # Spatial weights matrix
  nsim = 999                # Number of permutations
)

# View results
moran_test$statistic         # Moran's I value
```

## Questions & Challenges

-   The intuition behind Moran's I is "*When I’m above/below average, are my neighbors also above/below average?"* I'm curious if incorporating models such as kNN can help to meaningfully reduce spatial lag?

## Connections to Policy

-   Research methods should follow policy intents and purposes. When looking at market forecasting or policy predictions, the predictive spatial features described above are more useful than spatial econometrics models

## Reflection

-   I had never heard of Spatial Lag, Spatial Autocorrelation, or Moran's I before this class as I have not taken spatial statistics, so this was a very useful crash course!
