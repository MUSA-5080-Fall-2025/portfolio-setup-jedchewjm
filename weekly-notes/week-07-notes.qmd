---
title: "Week 7 Notes - Model Diagnostics and Spatial Autocorrelation"
date: "2025-10-20"
---

## Key Concepts Learned

### Regression Workflow

**Building the model:**

1.  Visualize relationships

2.  Engineer features

3.  Fit the model

4.  Evaluate performance (RMSE, R²)

5.  Check assumptions

**Spatial Diagnostics**

6.  Are errors random or clustered?
7.  Do we predict better in some areas?
8.  Is there remaining spatial structure?

**Spatial Autocorrelation in Errors (i.e. Clustered Errors)**

-   spatial pattern visible (not random scatter)

-   under/over-predict in areas

-   model misses something about location

**Moran's I measures Spatial Autocorrelation**

*Intuition: When I’m above/below average, are my neighbors also above/below average?*

**Range:** -1 to +1

-   **+1** = Perfect positive correlation (clustering)

-   **0** = Random spatial pattern

-   **-1** = Perfect negative correlation (dispersion)

**Sample Example:**

![](images/clipboard-2995180422.png){width="451"}

Step 1: Calculate Deviations from Mean

![](images/clipboard-2249328638.png)

**Positive deviation** = we over-predicted (actual \> predicted)\
**Negative deviation** = we under-predicted (actual \< predicted)

Step 2: Multiply Neighbor Pair Deviations

![](images/clipboard-645011366.png)

-   Lots of positive products → **High Moran’s I** (clustering)

-   Products near zero → **Low Moran’s I** (random)

-   Negative products → **Negative Moran’s I** (rare with errors)

## Coding Techniques

-   **Create and Plot the Spatial Lag**

```{r, eval = FALSE}
library(spdep)

# Define neighbors (5 nearest)
coords <- st_coordinates(boston_test)
neighbors <- knn2nb(knearneigh(coords, k=5))
weights <- nb2listw(neighbors, style="W")

# Calculate spatial lag of errors
boston_test$error_lag <- lag.listw(weights, boston_test$error)
```

-   **Calculate Moran's I**

```{r, eval = FALSE}
# Test for spatial autocorrelation in errors
moran_test <- moran.mc(
  boston_test$error,        # Your errors
  weights,                  # Spatial weights matrix
  nsim = 999                # Number of permutations
)

# View results
moran_test$statistic         # Moran's I value
```

## Questions & Challenges

-   

## Connections to Policy

-   

## Reflection
